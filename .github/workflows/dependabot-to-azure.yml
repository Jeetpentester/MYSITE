name: Sync Dependabot to Azure Boards (No Duplicates)

on:
  workflow_dispatch:
  schedule:
    - cron: '0 3 * * *'

jobs:
  sync_dependabot_to_azure_boards:
    runs-on: ubuntu-latest

    steps:
      - name: Fetch All Dependabot Alerts with Pagination
        env:
          GH_TOKEN: ${{ secrets.GH_DEPENDABOT_PAT }}
          GH_REPO: ${{ github.repository }}
        run: |
          echo "Fetching all open Dependabot alerts..."
          page=1; all_alerts="[]"
          while :; do
            resp=$(curl -s -H "Authorization: token $GH_TOKEN" \
              -H "Accept: application/vnd.github+json" \
              "https://api.github.com/repos/$GH_REPO/dependabot/alerts?state=open&per_page=100&page=$page")
            cnt=$(echo "$resp" | jq 'length')
            all_alerts=$(jq -s 'add' <(echo "$all_alerts") <(echo "$resp"))
            (( cnt < 100 )) && break
            ((page++))
          done
          echo "$all_alerts" > alerts.json
          total=$(jq length alerts.json)
          echo "TOTAL_ALERTS=$total" >> $GITHUB_ENV
          echo "IS_ARRAY=$(jq 'if type==\"array\" then true else false end' alerts.json)" >> $GITHUB_ENV

      - name: Create Azure Boards Tasks (with GHSAID field)
        if: env.IS_ARRAY == 'true'
        env:
          AZURE_ORG: https://dev.azure.com/devsecopsjeet
          AZURE_PROJ: azureboard
          AZURE_PAT: ${{ secrets.AZURE_DEVOPS_PAT }}
        run: |
          set -eo pipefail
          AUTH=$(echo -n ":$AZURE_PAT" | base64 | tr -d '\n')
          created=0; skipped=0; failed=0

          while IFS= read -r a; do
            ID=$(echo "$a" | jq -r '.security_advisory.ghsa_id')
            SEV=$(echo "$a" | jq -r '.security_advisory.severity // "Unknown"')
            Pkg=$(echo "$a" | jq -r '.dependency.package.name')
            sum=$(echo "$a" | jq -r '.security_advisory.summary' | sed 's/"/\\"/g')
            url=$(echo "$a" | jq -r '.html_url')

            echo "Checking GHSAID $ID..."
            query_url="$AZURE_ORG/$AZURE_PROJ/_apis/wit/wiql?api-version=7.0"
            q="{\"query\": \"SELECT [System.Id] FROM WorkItems WHERE [System.TeamProject]='$AZURE_PROJ' AND [Custom.GHSAID] = '$ID'\"}"
            res=$(curl -s -X POST "$query_url" \
              -H "Content-Type: application/json" \
              -H "Authorization: Basic $AUTH" \
              -d "$q")
            exist=$(echo "$res" | jq '.workItems | length')

            if [[ $exist -gt 0 ]]; then
              echo "Skipped: GHSAID $ID already exists."
              (( skipped++ ))
              continue
            fi

            title="[$SEV] $Pkg - $ID"
            desc="Severity: $SEV<br/><a href='$url'>$url</a><br/>$sum"

            set +e
            resp=$(curl -s -w "\n%{http_code}" \
              -X POST "$AZURE_ORG/$AZURE_PROJ/_apis/wit/workitems/\$Task?api-version=7.0" \
              -H "Content-Type: application/json-patch+json" \
              -H "Authorization: Basic $AUTH" \
              -d "[{
                    \"op\":\"add\",\"path\":\"/fields/System.Title\",\"value\":\"$title\"
                  },{
                    \"op\":\"add\",\"path\":\"/fields/System.Description\",\"value\":\"$desc\"
                  },{
                    \"op\":\"add\",\"path\":\"/fields/Microsoft.VSTS.Common.Severity\",\"value\":\"$SEV\"
                  },{
                    \"op\":\"add\",\"path\":\"/fields/Custom.GHSAID\",\"value\":\"$ID\"
                  }]")
            code=$(echo "$resp" | tail -n1)
            set -e

            if [[ $code =~ ^20[01]$ ]]; then
              echo "Created: $ID"
              (( created++ ))
            else
              echo "Failed: $ID (Status $code)"
              (( failed++ ))
            fi
          done < <(jq -c '.[]' alerts.json)

          echo "Total alerts: $TOTAL_ALERTS"
          echo "✅ Created: $created"
          echo "⏭️ Skipped existing: $skipped"
          echo "❌ Failed: $failed"

      - name: Show JSON If Fetch Wasn’t Array
        if: env.IS_ARRAY != 'true'
        run: cat alerts.json