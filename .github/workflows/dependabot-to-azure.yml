name: Sync Dependabot Vulnerabilities to Azure Boards

on:
  workflow_dispatch:
  schedule:
    - cron: '0 3 * * *'  # Daily at 03:00 UTC

jobs:
  sync_dependabot_to_azure_boards:
    runs-on: ubuntu-latest

    steps:
      - name: Fetch All Dependabot Alerts with Pagination
        env:
          GH_TOKEN: ${{ secrets.GH_DEPENDABOT_PAT }}
          GH_REPO: ${{ github.repository }}
        run: |
          echo "üîç Fetching all open Dependabot alerts using pagination..."

          page=1
          all_alerts="[]"

          while :; do
            echo "üìÑ Fetching page $page..."
            response=$(curl -s -H "Authorization: token $GH_TOKEN" \
              -H "Accept: application/vnd.github+json" \
              "https://api.github.com/repos/$GH_REPO/dependabot/alerts?state=open&per_page=100&page=$page")

            count=$(echo "$response" | jq 'length')
            echo "‚úÖ Page $page returned $count alerts."

            # Merge with all_alerts
            all_alerts=$(jq -s 'add' <(echo "$all_alerts") <(echo "$response"))

            if [ "$count" -lt 100 ]; then
              break
            fi

            page=$((page + 1))
          done

          echo "$all_alerts" > alerts.json

          total_alerts=$(jq length alerts.json)
          echo "üìä Total Dependabot alerts fetched: $total_alerts"
          echo "TOTAL_ALERTS=$total_alerts" >> $GITHUB_ENV

          IS_ARRAY=$(jq 'if type=="array" then true else false end' alerts.json)
          echo "IS_ARRAY=$IS_ARRAY" >> $GITHUB_ENV

      - name: Create Azure Boards Tasks
        if: env.IS_ARRAY == 'true'
        env:
          AZURE_ORG_URL: https://dev.azure.com/devsecopsjeet
          AZURE_PROJECT: azureboard
          AZURE_DEVOPS_PAT: ${{ secrets.AZURE_DEVOPS_PAT }}
        run: |
          set -eo pipefail

          echo "üõ† Creating Azure Boards tasks from alerts..."
          AUTH=$(echo -n ":$AZURE_DEVOPS_PAT" | base64 | tr -d '\n')

          total_created=0
          total_failed=0

          while IFS= read -r alert; do
            SEVERITY=$(echo "$alert" | jq -r '.security_advisory.severity // "Unknown"')
            PACKAGE=$(echo "$alert" | jq -r '.dependency.package.name')
            IDENTIFIER=$(echo "$alert" | jq -r '.security_advisory.ghsa_id')
            DESC=$(echo "$alert" | jq -r '.security_advisory.summary')
            URL=$(echo "$alert" | jq -r '.html_url')

            SAFE_DESC=$(echo "$DESC" | sed 's/"/\\"/g')
            TITLE="[$SEVERITY] $PACKAGE - $IDENTIFIER"
            DESCRIPTION="Severity: $SEVERITY<br/><br/>GitHub Alert: <a href='$URL'>$URL</a><br/><br/>$SAFE_DESC"

            echo "üìå Creating task: $TITLE"

            set +e
            RESPONSE=$(curl -s -w "\n%{http_code}" \
              -X POST "$AZURE_ORG_URL/$AZURE_PROJECT/_apis/wit/workitems/\$Task?api-version=7.0" \
              -H "Content-Type: application/json-patch+json" \
              -H "Authorization: Basic $AUTH" \
              -d "[{
                    \"op\": \"add\",
                    \"path\": \"/fields/System.Title\",
                    \"value\": \"$TITLE\"
                  },{
                    \"op\": \"add\",
                    \"path\": \"/fields/System.Description\",
                    \"value\": \"$DESCRIPTION\"
                  },{
                    \"op\": \"add\",
                    \"path\": \"/fields/Microsoft.VSTS.Common.Severity\",
                    \"value\": \"$SEVERITY\"
                  }]")
            STATUS=$(echo "$RESPONSE" | tail -n1)
            set -e

            if [[ "$STATUS" == "200" || "$STATUS" == "201" ]]; then
              echo "‚úÖ Task created for $PACKAGE [$SEVERITY]"
              total_created=$((total_created + 1))
            else
              echo "‚ùå Failed to create task for $PACKAGE [$SEVERITY] (Status: $STATUS)"
              echo "$RESPONSE" | sed '$d'
              total_failed=$((total_failed + 1))
            fi

          done < <(jq -c '.[]' alerts.json)

          echo "üìã Summary:"
          echo "üî∏ Total alerts processed: $TOTAL_ALERTS"
          echo "‚úÖ Tasks created: $total_created"
          echo "‚ùå Tasks failed: $total_failed"

      - name: Handle Non-Array JSON Response
        if: env.IS_ARRAY != 'true'
        run: |
          echo "‚ö†Ô∏è GitHub API did not return an array of Dependabot alerts."
          cat alerts.json